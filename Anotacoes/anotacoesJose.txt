Anotações da aula! 03/05/2023

Server.js > app.js > index.js > routes > controller.js < models 

models (classes = Gabarito)
controller (conecta models-view)
view (front-end)

No controller que programamos as autorizações

======================================================================
Tarefas para proxima aula

* Ter pelo menos um GET no routes
* Construir o controller
Ou seja, criar as rotas e o controller de cada rota criada

Roteiro:
* Definir as rotas a serem criadas
* Criar Sprint para essa atividade
* Sexta 07/05/23 esta nessa atividade, monitoria prof. Gilberto.

=======================================================================
npm i nodemon //Instalar nodemon
npm start // Para ver no navegador

=======================================================================
Modelo de listagem:

static listarUsuarioId = async (req,res) => {
    try{
        const id = req.params.id

        usuarios.findById(id).then(async (usuario) => {
            let user =JSON.parse(JSON.stringify(usuario))
            user.grupos = await grupos.find({_id: {$in: user.grupos}}).lean()

            return res.status(200).send(user)
        })
        .catch((err) => {
            return res.status(400).json([{error: true, code: 400, message: "ID invalido ou não encontrado"}])
        })
    }catch (err){
        console.error(err)
        return res.status(500).json({error: true, code: 500, message: "Erro interno do Servidor"})

    }
}